Módulo 1

01 - criando estrutura do projeto

- criar pasta para o projeto (mkdir 01-github-explorer)
- yarn init -y (cria arquivo package.json automático)
- yarn add react (instala dependência do react)
- yarn add react-dom (instala dependência do react para trabalhar na web)
- criar pasta src
    - index.jsx
- criar pasta public
    - criar arquivo index.html com estrutura básica (!)

02 - configurando babel

- yarn add @babel/core @babel/cli @babel/preset-env -D
- criar arquivo babel.config.js (exportar configurações module.exports)
- criar arquivo index.jsx na pasta src
- converter código com o babel
    - yarn babel src/index.jsx --out-file dist/bundle.js
        (o bundle vai conter o código convertido)

03 - configurando Webpack

- yarn add webpack webpack-cli -D
- criar arquivo de configuração webpack.config.js
- yarn add babel-loader -D (integração entre babel e webpack)
- criar arquivo App.jsx exportar h1
- importar arquivo App
- yarn webpack para testar

04 - estrutura do ReactJs

- no index.html:
    - cria a div com id root
    - chama script do arquivo bundle.js
- no index.jsx:
    - importa a função render do react-dom
    - chama o render passando nos parâmetros, no primeiro parâmetro vai o que será renderizado, e no segundo dentro de qual elemento
    - adicionar mode: 'development' no arquivo de configuração do weppack

05 - servindo html estático

    - pluggin para não precisar criar manualmente a tag script dentro do index.html
        yarn add html-webpack-plugin -D
    - adiciona as configurações do plugin no arquivo webpack.config.js

06 - webpack dev server

    - yarn add webpack-dev-server -D
    - adiciona no arquivo webpack.config.js as configurações em devServer
    - automatiza a função de yarn webpack - o webpack ficará observando as mudanças e atualizará o bundle.js automaticamente
    - yarn webpack server

07 - facilita a visualização de erros no browser, fornece acesso ao código original da aplicação no browser
    - no arquivo webpack.config.js adicionar as configurações de devtool

08 - ambiente dev e produção
    - cria variavél isDevelopment no arquivo erbpack.config.js
    - yarn add cross-env -D (criar variavel ambiente independente do sistema operacional)
